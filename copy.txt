
https://github.com/bunq/gitbook/tree/743f3653864378e9221b64252614e379f067a8e1/psd2/connect-as-a-psd2-service-provider
https://github.com/DixitGunjan/openbanking-java-sdk-example/tree/7e9a5ceabb87f5355af389deebdf335471ce49d5




https://github.com/MbqIIB/Diplom/blob/a303b617138bdae5aaa77751a7a8a0eb0acb7ec3/dp/ESBGW.CF/files/local/allMQFunction.xsl

https://github.com/yschiang/dp-samples/blob/0cd27cdf93e2b21736806436178c9aa6964c0d1c/mq-put-retrievemsgid.xsl
https://github.com/shabharish/DP/blob/6a5062a0c57c943ab206dcc18b6c54d6b7b227b8/RIHX_Check_Transform.xsl

 <dp:url-open target="dpmq://QMGR/?RequestQueue=Q1.REPLY;ParseHeaders=true"  response="responsecode-ignore">
<dp:url-open target="dpmq://QMGR/?RequestQueue=Q1.REPLY;ParseHeaders=false"  response="responsecode-ignore">	
<dp:url-open target="{$vMqTarget}" response="binaryNode" http-headers="$vMQHeader">
response="responsecode-ignore" content-type="application/xml" http-method="'post'">
response="ignore |
  http-method="get | patch | post | put | delete | head"
  
  <dp:url-open target="{$vMqTarget}" response="responsecode-ignore" http-headers="$vMQHeader">
  
  3.
  <xsl:variable name="MQMD_AGL_REQ_HEADERS">
                                    <dp:serialize select="$MQMD_AGL_HEADERS" omit-xml-decl="yes"/>
                                </xsl:variable>
                                
                                <dp:set-request-header name="'MQMD'" values="$MQMD_AGL_REQ_HEADERS"/>
                                
                                <!-- Invoke URL Open to place the data to Wait Queue -->
                                <xsl:variable name="mqPutAGL">
                                    <dp:url-open target="dpmq://MWMQ_DEV/?RequestQueue=MW.DP.RIHX_AGL.REQ.QL" response="responsecode-ignore" content-type="application/xml" http-method="'post'">
                                        <xsl:copy-of select="$inputAGLRequest"/>
                                    </dp:url-open>
                                </xsl:variable>   
	    
4.	    
	<xsl:variable name="mqPutAGL">
                                    <dp:url-open target="dpmq://MWMQ_DEV/?RequestQueue=MW.DP.RIHX_AGL.REQ.QL" response="responsecode-ignore" content-type="application/xml" http-method="'post'">
                                        <xsl:copy-of select="$inputAGLRequest"/>
                                    </dp:url-open>
                                </xsl:variable>       
6.

	    
	    <xsl:if test="$mqPutAGL/url-open/responsecode/text()!= '0'">
                                    <!-- Alert Notification -->
                                    <xsl:message dp:priority="alert">DataPower detected Error while placing RIHX Health Queue MW.DP.RIHX_AGL.REQ.QL</xsl:message>
                                    <dp:set-variable name="'var://context/local/bFaultAGL'" value="'true'"/>
                                    <dp:set-variable name="'var://context/local/bCriticalTAI'" value="'true'"/>
                                    <!-- <dp:reject></dp:reject> -->
                                </xsl:if>
                                <!--  fetching the responseCode  -->
                                <xsl:variable name="responseCode" select="$mqPutAGL//*[local-name()='responsecode']"/>
                                <xsl:choose>
                                    <xsl:when test="$responseCode='0'">
                                        <xsl:variable name="aglResult"><xsl:value-of select="$mqPutAGL//*[local-name()='RIHXSearch_SUBMITS_REQUEST_RECORD']"/></xsl:variable>
                                    </xsl:when>
                                </xsl:choose>
	    
	    
-------

mqsisetdbparms IB9NODE -n <dsn> -u <user> -p '<password>' 
mqsisetdbparms IB9NODE -n dsn::DAN -u <user> -p '<password>' 
mqsisetdbparms IB9NODE -n dsn::<dsn> -u <user> -p '<password>' 
# Create JDBCProvider
mqsideleteconfigurableservice IB9NODE -c JDBCProviders -o JDBCProviderServiceName 
mqsicvp -n FEMDB -u db2admin -p db2admin





SET QUERY = 'INSERT INTO ESBUSER.CHL_AIRTIMETOPUP(SN,MSISDN,ACCTNO,CIFID,ENTRYDATE,CHANNELID,BILLERID,BILLERNAME,COUNTRYCODE,ATTRIBUTES,SOLID,TXNAMT) VALUES(?,?,?,?,sysdate,?,?,?,?,?,?,?)';
		
		
	SET DETAILS.VALUE[] = PASSTHRU(QUERY TO Database.{DSN} VALUES(Environment.Variables.COUNTRYCODE));



SET DETAILS = PASSTHRU(QUERY TO Database.{DSN} VALUES 



(Environment.Variables.SESSIONID,Environment.Variables.MSISDN,Environment.Variables.ACCTNO,Environment.Variables.CIFID,Environment.Variables.CHANNELID,Environment.Variables.BILLERID,Environment.Variables.BILERNAME,Environment.Variables.COUNTRYCODE_3,Environment.Variables.ATTRIBUTES,Environment.Variables.SOLID,Environment.Variables.TOTALAMOUNT_WITHOUT_0));
--		

	
		OutputRoot.SOAP.Body.ns:getfileinfosRes.CONSUMER_ID= 
		OutputRoot.SOAP.Body.ns:getfileinfosRes.CREATION_DATETIME=
		OutputRoot.SOAP.Body.ns:getfileinfosRes.FileName=
		OutputRoot.SOAP.Body.ns:getfileinfosRes.FileNumber=
